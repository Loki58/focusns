<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.focusns.dao.core.ProjectLinkDao">

    <cache />

	<resultMap id="BaseResultMap" type="org.focusns.model.core.ProjectLink">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="from_project_id" property="fromProjectId" jdbcType="VARCHAR" />
        <result column="to_project_id" property="toProjectId" jdbcType="VARCHAR" />
        <result column="mutual" property="mutual" jdbcType="BOOLEAN" />

        <association property="fromProject" javaType="org.focusns.model.core.Project">
            <id property="id" column="from_project_id"/>
            <result property="code" column="from_project_code"/>
            <result property="title" column="from_project_title"/>
            <result property="description" column="from_project_description"/>
            <result property="createdById" column="from_project_created_by_id"/>
            <result property="modifiedById" column="from_project_modified_by_id"/>
        </association>
        <association property="toProject" javaType="org.focusns.model.core.Project">
            <id property="id" column="to_project_id"/>
            <result property="code" column="to_project_code"/>
            <result property="title" column="to_project_title"/>
            <result property="description" column="to_project_description"/>
            <result property="createdById" column="to_project_created_by_id"/>
            <result property="modifiedById" column="to_project_modified_by_id"/>
        </association>
	</resultMap>
	
	<insert id="insert" parameterType="org.focusns.model.core.ProjectLink">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
			select last_insert_id()
		</selectKey>
		insert into tb_project_link (from_project_id, to_project_id, mutual) 
		values (#{fromProjectId}, #{toProjectId}, #{mutual})
	</insert>

	<select id="select" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select * from tb_project_link where id = #{id}
	</select>
	
	<update id="update" parameterType="org.focusns.model.core.ProjectLink">
		update tb_project_link 
		<set>
            <if test="fromProjectId != null" >
		        from_project_id = #{fromProjectId},
			</if>
			<if test="toProjectId != null" >
		        to_project_id = #{toProjectId},
			</if>
            <if test="mutual != null">
                mutual = #{mutual},
            </if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete" parameterType="java.lang.Long">
		delete from tb_project_link where id = #{id}
	</delete>

    <select id="selectByFromAndToProjectId" parameterType="java.util.Map" resultMap="BaseResultMap">
        select * from tb_project_link where from_project_id = #{fromProjectId} and to_project_id = #{toProjectId}
    </select>

    <delete id="deleteByFromAndToProjectId" parameterType="java.util.Map">
        delete from tb_project_link where from_project_id = #{fromProjectId} and to_project_id = #{toProjectId}
    </delete>

    <sql id="fetchPageSql">
        from tb_project_link a, tb_project b
        <where>
            <if test="category != null">
                and b.category_id in (select id from tb_project_category where code = #{category})
            </if>
            <if test="toProjectId!=null">
                and a.from_project_id = b.id and a.to_project_id = #{toProjectId}
            </if>
            <if test="fromProjectId!=null">
                and a.to_project_id = b.id and a.from_project_id = #{fromProjectId}
            </if>
            <if test="mutual!=null">
                and a.mutual = #{mutual}
            </if>
        </where>
    </sql>
    <select id="fetchPage" parameterType="java.util.Map" resultMap="BaseResultMap">
        select a.*,
        <if test="toProjectId!=null">
               b.id as from_project_id,
               b.code as from_project_code,
               b.title as from_project_title,
               b.description as from_project_description,
               b.created_by_id as from_project_created_by_id,
               b.modified_by_id as from_project_modified_by_id
        </if>
        <if test="fromProjectId!=null">
            b.id as to_project_id,
            b.code as to_project_code,
            b.title as to_project_title,
            b.description as to_project_description,
            b.created_by_id as to_project_created_by_id,
            b.modified_by_id as to_project_modified_by_id
        </if>
        <include refid="fetchPageSql"/>
    </select>
    <select id="fetchPageCount" parameterType="java.util.Map" resultType="java.lang.Long">
        select count(1) <include refid="fetchPageSql"/>
    </select>
	
</mapper>