<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.focusns.dao.core.ProjectUserDao">

    <cache />

	<resultMap id="BaseResultMap" type="org.focusns.model.core.ProjectUser">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
        <result column="nickname" property="nickname" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
        <result column="enabled" property="enabled" jdbcType="BOOLEAN" />
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
        <result column="project_id" property="projectId" jdbcType="BIGINT" />
        <association property="project" javaType="org.focusns.model.core.Project">
            <id property="id" column="project_id"/>
            <result property="code" column="project_code"/>
            <result property="title" column="project_title"/>
            <result property="description" column="project_description"/>
            <result property="createdById" column="project_created_by_id"/>
            <result property="modifiedById" column="project_modified_by_id"/>
        </association>
	</resultMap>

	<insert id="insert" parameterType="org.focusns.model.core.ProjectUser">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
			select last_insert_id()
		</selectKey>
		insert into tb_project_user (username, password, nickname, email, enabled, created_at)
		values (#{username}, #{password}, #{nickname}, #{email}, #{enabled}, #{createdAt})
	</insert>

	<select id="select" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select * from tb_project_user where id = #{id}
	</select>

    <select id="selectWithProject" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select a.*,
               b.id as project_id,
               b.code as project_code,
               b.title as project_title,
               b.description as project_description,
               b.created_by_id as project_created_by_id,
               b.modified_by_id as project_modified_by_id
        from tb_project_user a, tb_project b
        where a.project_id = b.id and a.id = #{id}
    </select>

	<select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
		select * from tb_project_user where username = #{username}
	</select>

	<update id="update" parameterType="org.focusns.model.core.ProjectUser">
		update tb_project_user
		<set>
			<if test="username != null" >
		        username = #{username},
			</if>
			<if test="password != null" >
		        password = #{password},
			</if>
            <if test="nickname != null" >
                nickname = #{nickname},
            </if>
            <if test="email != null" >
                email = #{email},
            </if>
			<if test="enabled != null" >
                enabled = #{enabled},
			</if>
            <if test="createdAt != null" >
                created_at = #{createdAt},
            </if>
            <if test="projectId > 0" >
		        project_id = #{projectId},
			</if>
		</set>
		where id = #{id}
	</update>

    <sql id="fetchPageSql">
        from tb_project_user a, tb_project b
        where a.project_id = b.id
    </sql>
    <select id="fetchPage" parameterType="java.util.Map" resultMap="BaseResultMap">
        select a.*,
                b.id as project_id,
                b.code as project_code,
                b.title as project_title,
                b.description as project_description,
                b.created_by_id as project_created_by_id,
                b.modified_by_id as project_modified_by_id
                <include refid="fetchPageSql"/>
    </select>
    <select id="fetchPageCount" parameterType="java.util.Map" resultType="java.lang.Long">
        select count(1) <include refid="fetchPageSql"/>
    </select>

	<delete id="delete" parameterType="java.lang.Long">
		delete from tb_project_user where id = #{id}
	</delete>

    <insert id="insertRole" parameterType="java.util.Map">
        insert into tb_project_user_role (project_id, user_id, role_id)
        values (#{projectId}, #{userId}, #{roleId})
    </insert>

    <delete id="deleteRole" parameterType="java.util.Map">
        delete from tb_project_user_role
        where project_id = #{projectId} and user_id = #{userId} and role_id = #{roleId}
    </delete>

</mapper>