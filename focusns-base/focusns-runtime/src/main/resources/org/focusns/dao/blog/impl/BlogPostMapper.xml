<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.focusns.dao.blog.BlogPostDao">

    <cache />

	<resultMap id="BaseResultMap" type="org.focusns.model.blog.BlogPost">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="title" property="title" jdbcType="VARCHAR" />
        <result column="summary" property="summary" jdbcType="VARCHAR" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
		<result column="modified_at" property="modifiedAt" jdbcType="TIMESTAMP" />
        <result column="category_id" property="categoryId" jdbcType="BIGINT" />
        <result column="created_by_id" property="createdById" jdbcType="BIGINT" />
        <result column="modified_by_id" property="modifiedById" jdbcType="BIGINT" />
        <result column="project_id" property="projectId" jdbcType="BIGINT" />
	</resultMap>
	
	<insert id="insert" parameterType="org.focusns.model.blog.BlogPost">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
			select last_insert_id()
		</selectKey>
        <choose>
            <when test="categoryId > 0 and projectId > 0">
                insert into tb_blog_post (title, summary, content, created_at, modified_at, category_id, created_by_id, modified_by_id, project_id)
                values (#{title}, #{summary}, #{content}, #{createdAt}, #{modifiedAt}, #{categoryId}, #{createdById}, #{modifiedById}, #{projectId})
            </when>
            <when test="categoryId &gt; 0 and projectId &lt; 1">
                insert into tb_blog_post (title, summary, content, created_at, modified_at, category_id, created_by_id, modified_by_id)
                values (#{title}, #{summary}, #{content}, #{createdAt}, #{modifiedAt}, #{categoryId}, #{createdById}, #{modifiedById})
            </when>
            <when test="categoryId &lt; 0 and projectId &gt; 0">
                insert into tb_blog_post (title, summary, content, created_at, modified_at, created_by_id, modified_by_id, project_id)
                values (#{title}, #{summary}, #{content}, #{createdAt}, #{modifiedAt}, #{createdById}, #{modifiedById}, #{projectId})
            </when>
            <otherwise>
                insert into tb_blog_post (title, summary, content, created_at, modified_at, created_by_id, modified_by_id)
                values (#{title}, #{summary}, #{content}, #{createdAt}, #{modifiedAt}, #{createdById}, #{modifiedById})
            </otherwise>
        </choose>
	</insert>

	<select id="select" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select * from tb_blog_post where id = #{id}
	</select>
	
	<update id="update" parameterType="org.focusns.model.blog.BlogPost">
		update tb_blog_post 
		<set>
			<if test="title != null" >
		        title = #{title},
			</if>
            <if test="summary != null" >
                summary = #{summary},
            </if>
			<if test="content != null" >
		        content = #{content},
			</if>
            <if test="createdAt != null" >
		        created_at = #{createdAt},
			</if>
            <if test="modifiedAt != null" >
		        modified_at = #{modifiedAt},
			</if>
            <if test="categoryId > 0" >
		        category_id = #{categoryId},
			</if>
            <if test="createdById > 0" >
		        created_by_id = #{createdById},
			</if>
            <if test="projectId > 0" >
                project_id = #{projectId},
            </if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete" parameterType="java.lang.Long">
		delete from tb_blog_post where id = #{id}
	</delete>

    <sql id="selectByProjectAndCategoryIdSql">
        <choose>
            <when test="categoryId > 0">
                from tb_blog_post a, tb_blog_category b
                where a.category_id = b.id and b.id = #{categoryId}
                order by a.created_at desc
            </when>
            <when test="categoryId == -1">
                from tb_blog_post a
                where a.project_id = #{projectId} and a.category_id is null
                order by a.created_at desc
            </when>
            <otherwise>
                from tb_blog_post a
                where a.project_id = #{projectId}
                order by a.created_at desc
            </otherwise>
        </choose>
    </sql>
    <select id="fetchByProjectAndCategoryId" parameterType="java.util.Map" resultMap="BaseResultMap">
        select * <include refid="selectByProjectAndCategoryIdSql"/>
    </select>
    <select id="fetchByProjectAndCategoryIdCount" parameterType="java.util.Map" resultType="java.lang.Long">
        select count(1) <include refid="selectByProjectAndCategoryIdSql"/>
    </select>
</mapper>