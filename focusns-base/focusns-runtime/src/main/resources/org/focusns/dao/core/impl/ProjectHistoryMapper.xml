<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.focusns.dao.core.ProjectHistoryDao">

    <cache />

	<resultMap id="BaseResultMap" type="org.focusns.model.core.ProjectHistory">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="content" property="content" jdbcType="VARCHAR" />
		<result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
		<result column="target_id" property="targetId" jdbcType="BIGINT" />
		<result column="target_type" property="targetType" jdbcType="VARCHAR" />
        <result column="parent_id" property="parentId" jdbcType="BIGINT" />
        <result column="project_id" property="projectId" jdbcType="BIGINT" />
        <result column="created_by_id" property="createdById" jdbcType="BIGINT" />
	</resultMap>
	
	<insert id="insert" parameterType="org.focusns.model.core.ProjectHistory">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
			select last_insert_id()
		</selectKey>
        <choose>
            <when test="parentId > 0">
                insert into tb_project_history (content, created_at, target_id, target_type, parent_id, project_id, created_by_id)
                values (#{content}, #{createdAt}, #{targetId}, #{targetType}, #{parentId}, #{projectId}, #{createdById})
            </when>
            <otherwise>
                insert into tb_project_history (content, created_at, target_id, target_type, project_id, created_by_id)
                values (#{content}, #{createdAt}, #{targetId}, #{targetType}, #{projectId}, #{createdById})
            </otherwise>
        </choose>
	</insert>

	<select id="select" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select * from tb_project_history where id = #{id}
	</select>

	<update id="update" parameterType="org.focusns.model.core.ProjectHistory">
		update tb_project_history 
		<set>
			<if test="content != null" >
		        content = #{content},
			</if>
			<if test="createdAt != null" >
		        created_at = #{createdAt},
			</if>
			<if test="targetId > 0" >
		        target_id = #{targetId},
			</if>
			<if test="targetType != null" >
		        target_type = #{targetType},
			</if>
            <if test="parentId > 0" >
                project_id = #{projectId},
            </if>
			<if test="projectId > 0" >
		        project_id = #{projectId},
			</if>
            <if test="createdById > 0" >
		        created_by_id = #{createdById},
			</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete" parameterType="java.lang.Long">
		delete from tb_project_history where id = #{id}
	</delete>

    <select id="selectByParentId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select * from tb_project_history where parent_id = #{parentId}
    </select>

    <sql id="fetchByProjectIdSql">
        from tb_project_history
        where parent_id is null
            and (   project_id = #{projectId}
                    or project_id in (select to_project_id from tb_project_link
                    where from_project_id = #{projectId} ))
        order by created_at desc
    </sql>
    <select id="fetchByProjectId" parameterType="java.util.Map" resultMap="BaseResultMap">
        select * <include refid="fetchByProjectIdSql"/>
    </select>
     <select id="fetchByProjectIdCount" parameterType="java.util.Map" resultType="java.lang.Long">
        select count(1) <include refid="fetchByProjectIdSql"/>
    </select>
</mapper>